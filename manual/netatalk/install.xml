<?xml version="1.0" encoding="UTF-8"?>
<chapter id="installation">
  <chapterinfo>
    <date>24.10.2010</date>
  </chapterinfo>

  <title>Installation</title>

  <warning>
    <para>If you have previously used an older version of Netatalk, please
    read the chapter about <link linkend="upgrade">upgrading</link> first
    !!!</para>
  </warning>

  <para></para>

  <sect1>
    <title>How to obtain Netatalk</title>

    <para>Please have a look at the netatalk page on sourceforge for the most
    recent informations on this issue.</para>

    <para><ulink
    url="http://sourceforge.net/projects/netatalk/">http://sourceforge.net/projects/netatalk/</ulink></para>

    <sect2>
      <title>Binary packages</title>

      <para>Binary packages of Netatalk are included in some Linux and UNIX
      distributions. You might want to have a look at the usual locations, too
      (<ulink url="http://rpmfind.net/">http://rpmfind.net/</ulink>, <ulink
      url="http://packages.debian.org/">http://packages.debian.org/</ulink>,
      <ulink url="http://www.blastwave.org/">http://www.blastwave.org/</ulink>
      <ulink
      url="http://www.freebsd.org/ports/index.html">http://www.freebsd.org/ports/index.html</ulink>,
      etc.)<indexterm>
          <primary>RPM</primary>

          <secondary>Red Hat Package Manager package</secondary>
        </indexterm><indexterm>
          <primary>Deb</primary>

          <secondary>Debian package</secondary>
        </indexterm><indexterm>
          <primary>Ports</primary>

          <secondary>FreeBSD port</secondary>
        </indexterm></para>
    </sect2>

    <sect2>
      <title>Source packages</title>

      <sect3>
        <title>Tarballs</title>

        <para>Prepacked tarballs in .tar.gz and tar.bz2 format are available
        on the netatalk page on sourceforge</para>
      </sect3>

      <sect3>
        <title>Read-only Git</title>

        <para>Downloading the Git repository can be done quickly and
        easily.</para>

        <orderedlist>
          <listitem>
            <para>Make sure you have Git installed. <command>which
            git</command> should produce a path to git.</para>

            <screen><prompt>$&gt;</prompt> <userinput>which git</userinput>
<computeroutput>/usr/bin/git</computeroutput></screen>
          </listitem>

          <listitem>
            <para>If you don't have one make a source directory.
            <command>cd</command> to this directory.</para>

            <screen><prompt>$&gt;</prompt> <userinput>mkdir /path/to/new/source/dir</userinput>
<prompt>$&gt;</prompt> <userinput>cd /path/to/new/source/dir</userinput></screen>
          </listitem>

          <listitem>
            <para>Now get the source:</para>

            <screen><prompt>$&gt;</prompt> <userinput>git clone git://netatalk.git.sourceforge.net/gitroot/netatalk/netatalk
</userinput><computeroutput>Initialized empty Git repository in /path/to/new/source/dir/netatalk/.git/
remote: Counting objects: 2503, done.
...
</computeroutput></screen>

            <para>This will create a local directory called "netatalk"
            containing a complete and fresh copy of the whole Netatalk source
            from the Git repository.</para>
          </listitem>

          <listitem>
            <para>In order to keep your repository copy updated, occasionally
            run:</para>

            <screen><prompt>$&gt;</prompt> <userinput>git pull</userinput></screen>
          </listitem>

          <listitem>
            <para>Now <command>cd</command> to the netatalk directory and run
            <command>./bootstrap</command>. This will create the
            <filename>configure</filename> script required in the next
            step.</para>

            <screen><prompt>$&gt;</prompt> <userinput>./bootstrap</userinput></screen>
          </listitem>
        </orderedlist>

        <para></para>
      </sect3>
    </sect2>
  </sect1>

  <sect1>
    <title>Compiling Netatalk</title>

    <sect2>
      <title>Prerequisites</title>

      <sect3>
        <title>System requirements</title>

        <para>Your system needs to meet the following requirements:</para>

        <itemizedlist>
          <listitem>
            <para>A C compiler, Netatalk compiles fine with gcc &gt;
            2.7.95</para>
          </listitem>
        </itemizedlist>

        <para>To be able to compile with AFP3 support, your system has to
        support large files (&gt;2GB).</para>

        <note>
          <para>On linux systems glibc &gt; 2.2 is required.</para>
        </note>

        <para></para>
      </sect3>

      <sect3>
        <title>Required third party software</title>

        <para>Netatalk makes use of sleepycats' Berkeley DB<indexterm>
            <primary>BDB</primary>

            <secondary>Berkeley DB</secondary>
          </indexterm>. At the time of writing, the following versions are
        supported:</para>

        <itemizedlist>
          <listitem>
            <para>mimimum 4.6.x</para>
          </listitem>
        </itemizedlist>

        <para>In case Berkeley DB is not installed on your system, please
        download it from:</para>

        <para><ulink
        url="http://www.oracle.com/database/berkeley-db/index.html">http://www.oracle.com/database/berkeley-db/index.html</ulink></para>

        <para>and follow the <link linkend="build-bdb">installation
        instructions</link>.</para>
      </sect3>

      <sect3>
        <title>Optional third party software</title>

        <para>Netatalk can use the following third party software to enhance
        it's functionality.</para>

        <itemizedlist>
          <listitem>
            <para>OpenSSL or libgcrypt (recommended)</para>

            <para>Required for encrypted passwords. Without it, the password
            will be sent over the network in clear text. OpenSSL is needed for
            the older DHCAST128, libgcrypt is needed for DHX2.</para>

            <para>OpenSSL can be downloaded from: <ulink
            url="http://www.openssl.org/">http://www.openssl.org/</ulink>.</para>

            <para>libgcrypt can be downloaded from: <ulink
            url="http://directory.fsf.org/project/libgcrypt/">http://directory.fsf.org/project/libgcrypt/</ulink>.</para>
          </listitem>

          <listitem>
            <para>TCP wrappers</para>

            <para>Wietse Venema's network logger, also known as TCPD or
            LOG_TCP.</para>

            <para>Security options are: access control per host, domain and/or
            service; detection of host name spoofing or host address spoofing;
            booby traps to implement an early-warning system.</para>

            <para>TCP Wrappers can be downloaded from: <ulink
            url="ftp://ftp.porcupine.org/pub/security">ftp://ftp.porcupine.org/pub/security</ulink>/</para>
          </listitem>

          <listitem>
            <para>PAM<indexterm>
                <primary>PAM</primary>

                <secondary>Pluggable Authentication Modules</secondary>
              </indexterm></para>

            <para>PAM provides a flexible mechanism for authenticating users.
            PAM was invented by SUN<indexterm>
                <primary>SUN</primary>

                <secondary>Sun Microsystems</secondary>
              </indexterm> Microsystems. Linux-PAM is a suite of shared
            libraries that enable the local system administrator to choose how
            applications authenticate users.</para>

            <para>You can get the Linux PAM documentation and sources from
            <ulink
            url="http://www.kernel.org/pub/linux/libs/pam/">http://www.kernel.org/pub/linux/libs/pam/</ulink>.</para>
          </listitem>

          <listitem>
            <para>OpenSLP</para>

            <para>SLP<indexterm>
                <primary>SLP</primary>

                <secondary>Service Location Protocol</secondary>
              </indexterm> (Service Location Protocol) is an IETF<indexterm>
                <primary>IETF</primary>

                <secondary>Internet Engineering Task Force</secondary>
              </indexterm> standards track protocol that provides a framework
            to allow networking applications to discover the existence,
            location, and configuration of networked services in enterprise
            networks.</para>

            <para>Mac OS X 10.4 and earlier uses it to locate AFP servers,
            even though 10.2 and later prefer Bonjour.</para>

            <para>You can download OpenSLP from: <ulink
            url="http://www.openslp.org/">http://www.openslp.org/</ulink>.</para>
          </listitem>

          <listitem>
            <para>iconv</para>

            <para>iconv provides conversion routines for many character
            encodings. Netatalk uses it to provide charsets it does not have
            built in conversions for, like ISO-8859-1. On glibc systems,
            Netatalk can use the glibc provided iconv implementation.
            Otherwise you can use the GNU libiconv implementation.</para>

            <para>You can download GNU libiconv from: <olink><ulink
            url="http://www.gnu.org/software/libiconv/">http://www.gnu.org/software/libiconv/</ulink></olink>.</para>
          </listitem>
        </itemizedlist>
      </sect3>
    </sect2>

    <sect2 id="compiling-netatalk">
      <title>Compiling<indexterm>
          <primary>Compile</primary>

          <secondary>Compiling Netatalk from Source</secondary>
        </indexterm> Netatalk</title>

      <sect3>
        <title>Configuring the build</title>

        <para>To build the binaries, first run the program
        <command>./configure</command> in the source directory. This should
        automatically configure Netatalk for your operating system. If you
        have unusual needs, then you may wish to run</para>

        <screen>$&gt; <userinput>./configure --help</userinput></screen>

        <para>to see what special options you can enable.</para>

        <para>The most used configure options are:</para>

        <itemizedlist>
          <listitem>
            <para>--enable-[redhat/suse/cobalt/netbsd/fhs]</para>

            <para>This option helps netatalk to determine where to install the
            start scripts.</para>
          </listitem>

          <listitem>
            <para><option>--with-bdb</option>=<replaceable>/path/to/bdb/installation/</replaceable></para>

            <para>In case you installed Berkeley DB in a non-standard
            location, you will <emphasis>have</emphasis> to give the install
            location to netatalk, using this switch.</para>
          </listitem>
        </itemizedlist>

        <para>Now run configure with any options you need</para>

        <screen><prompt>$&gt;</prompt> <userinput>./configure [arguments] [--with-bdb=/bdb/install/path]</userinput></screen>

        <para>Configure will end up in an overview showing the settings the
        Netatalk Makefiles have been created with.</para>

        <para>If this step fails please visit the <ulink
        url="http://netatalk.sourceforge.net/wiki/index.php/Troubleshooting">troubleshooting
        guide</ulink>.</para>

        <note>
          <para>With recent RedHat releases, Berkeley DB links to libpthread.
          Netatalk does not link to libpthread, so detection of Berkeley DB
          fails when running configure. It's recommended to <link
          linkend="build-bdb">(re)compile Berkeley DB</link> with
          <option>--with-mutex="x86/gcc-assembly"</option> (on x86 platforms)
          to disable the use of libpthread. Alternatively you could use</para>

          <screen><prompt>$&gt;</prompt><userinput> LIBS="-lpthread" ./configure [arguments]</userinput></screen>

          <para>to trick Netatalk into linking to libpthread. However, this is
          not recommended, as there have been some trouble reports indicating
          that linking to libpthread badly damages performance.</para>
        </note>

        <para>Next, running</para>

        <screen><prompt>$&gt;</prompt> <userinput>make</userinput></screen>

        <para>should produce the Netatalk binaries (this step can take several
        minutes to complete).</para>

        <para>When the process finished you can use</para>

        <screen><prompt>$&gt;</prompt> <userinput>make install</userinput></screen>

        <para>to install the binaries and documentation (must be done as
        "root" when using default locations).</para>
      </sect3>
    </sect2>

    <sect2 id="build-bdb">
      <title>Compiling a new Berkeley DB for Netatalk</title>

      <para>Netatalk 2.1 requires Berkeley DB version 4.6 or newer. Even if
      you already have a supported version of Berkeley DB installed on your
      system, there are several reasons, why you might still want to consider
      building a new version for Netatalk.</para>

      <para>Many linux distributions provide a precompiled Berkeley DB
      version. This is usually nice, but also has one major drawback: If you
      update your system to a newer release, the installed version of Berkeley
      DB may change. This can lead to a number of problems, starting with
      strange behaviour of Netatalk, unreadable CNID Databases. Most likely
      Netatalk(afpd) won't start anymore, so you'll have to recompile
      Netatalk.</para>

      <para>For instructions compiling Berkeley DB, you should generally refer
      to the documentation provided by Sleepycat. The following information is
      meant to help you avoid problems, users experienced in the past.</para>

      <para>In case you are building on a recent RedHat release, please use
      <option>--with-mutex="x86/gcc-assembly"</option> on x86 platforms to
      prevent Berkeley DB from linking against libpthread.</para>

      <sect3>
        <title>Using a statically linked Berkeley DB</title>

        <para>To link Netatalk statically to Berkeley DB, you have to disable
        shared libraries when building Berkeley DB. If shared libraries exist,
        Netatalk will always link to them, even if a static version exists in
        the same location.</para>

        <screen><prompt>root#</prompt> <userinput>cd build_unix</userinput>
<prompt>root#</prompt> <userinput>../dist/configure --prefix=/install/path --disable-shared</userinput>
<prompt>root#</prompt> <userinput>make</userinput>
<prompt>root#</prompt> <userinput>make install</userinput></screen>

        <para>You should now continue with <link
        linkend="compiling-netatalk">building Netatalk</link>.</para>
      </sect3>

      <sect3>
        <title>Using a dynamically linked Berkeley DB</title>

        <para>Building a shared version of Berkeley DB is rather
        straightforward. However, especially under Linux, some care needs to
        be taken. Underlying system libraries, i.e. libnss_db, might be using
        Berkeley DB as well. As these libraries have likely been build with
        another, i.e. older, version of Berkeley DB, linking afpd to a newer
        version can lead to unexpected results.</para>

        <para>You need to configure Berkeley DB with the
        <option>--with-uniquename</option> configure switch to avoid these
        kind of problems. This insures your new version will not interfere
        with another installation of Berkeley DB on your system.</para>

        <screen><prompt>root#</prompt> <userinput>cd build_unix</userinput>
<prompt>root#</prompt> <userinput>../dist/configure --prefix=/install/path --with-uniquename</userinput>
<prompt>root#</prompt> <userinput>make</userinput>
<prompt>root#</prompt> <userinput>make install</userinput></screen>

        <para>If you select an install path other than
        <filename>/usr/local</filename>, you will have to configure your
        linker to look for libraries in this directory.</para>

        <para>On many operating systems, this is done by adding a new entry to
        <filename>/etc/ld.so.conf</filename>.</para>

        <screen><prompt>root#</prompt> <userinput>echo /install/path/lib &gt;/etc/ld.so.conf</userinput>
<prompt>root#</prompt> <userinput>ldconfig</userinput></screen>

        <para>You should now continue with <link
        linkend="compiling-netatalk">building Netatalk</link>.</para>
      </sect3>
    </sect2>
  </sect1>
</chapter>
